[
	***REMOVED***"model": "auth.user", "pk": 1, "fields": 
		***REMOVED***"password": "pbkdf2_sha256$216000$Aia2jiZ7DL2G$QUCqs6lCl38cH5PdRVmEfJ6zukJtwNNsdmG7RVWAx9w=", "last_login": "2021-12-14T08:01:56.030Z", "is_superuser": true, "username": "elkanahmalonza@gmail.com", "first_name": "Elkanah", "last_name": "Malonza", "email": "elkanahmalonza@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2021-12-14T06:38:55.499Z", "groups": [], "user_permissions": []***REMOVED***
	***REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 1, "fields": ***REMOVED***"app_label": "admin", "model": "logentry"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 2, "fields": ***REMOVED***"app_label": "auth", "model": "permission"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 3, "fields": ***REMOVED***"app_label": "auth", "model": "group"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 4, "fields": ***REMOVED***"app_label": "auth", "model": "user"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 5, "fields": ***REMOVED***"app_label": "contenttypes", "model": "contenttype"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 6, "fields": ***REMOVED***"app_label": "sessions", "model": "session"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 7, "fields": ***REMOVED***"app_label": "blog", "model": "articleseries"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 8, "fields": ***REMOVED***"app_label": "blog", "model": "articlecategory"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 9, "fields": ***REMOVED***"app_label": "blog", "model": "article"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 10, "fields": ***REMOVED***"app_label": "profile_settings", "model": "message"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 11, "fields": ***REMOVED***"app_label": "profile_settings", "model": "sociallink"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 12, "fields": ***REMOVED***"app_label": "profile_settings", "model": "pricing"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 13, "fields": ***REMOVED***"app_label": "profile_settings", "model": "skill"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 14, "fields": ***REMOVED***"app_label": "profile_settings", "model": "skillkeyword"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 15, "fields": ***REMOVED***"app_label": "profile_settings", "model": "education"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 16, "fields": ***REMOVED***"app_label": "profile_settings", "model": "pricingkeyword"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 17, "fields": ***REMOVED***"app_label": "profile_settings", "model": "workhighlight"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 18, "fields": ***REMOVED***"app_label": "profile_settings", "model": "profile"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 19, "fields": ***REMOVED***"app_label": "profile_settings", "model": "service"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 20, "fields": ***REMOVED***"app_label": "profile_settings", "model": "work"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 21, "fields": ***REMOVED***"app_label": "profile_settings", "model": "project"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 22, "fields": ***REMOVED***"app_label": "profile_settings", "model": "projectkeyword"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 23, "fields": ***REMOVED***"app_label": "profile_settings", "model": "testimony"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 24, "fields": ***REMOVED***"app_label": "blog", "model": "commentreply"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 25, "fields": ***REMOVED***"app_label": "blog", "model": "comment"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 26, "fields": ***REMOVED***"app_label": "admin", "model": "appsettings"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 27, "fields": ***REMOVED***"app_label": "profile_settings", "model": "appsettings"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 28, "fields": ***REMOVED***"app_label": "profile_settings", "model": "projectimage"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 29, "fields": ***REMOVED***"app_label": "profile_settings", "model": "professionalskillhighlight"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 30, "fields": ***REMOVED***"app_label": "profile_settings", "model": "technicalskillhighlight"***REMOVED******REMOVED***, ***REMOVED***"model": "contenttypes.contenttype", "pk": 31, "fields": ***REMOVED***"app_label": "profile_settings", "model": "emailapp"***REMOVED******REMOVED***, ***REMOVED***"model": "sessions.session", "pk": "yxdtjmzkbjqrni5efwuvilckem19inom", "fields": ***REMOVED***"session_data": ".eJxVjDsOwyAQBe9CHSHALJ-U6X0GtMASnERYMnYV5e4RkoukfTPz3izgsddwdNrCktmVSXb53SKmJ7UB8gPbfeVpbfu2RD4UftLO5zXT63a6fwcVex21U1IoqwtNTnuLxRkfCagQKcRiMRoPZjJJZIEanISEkCRBtJMXAOzzBekXN94:1mx2l2:tAexn3-iCF4ajoARLPH27f97ikw2hLErIGeAClf7bAo", "expire_date": "2021-12-28T08:01:56.175Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articleseries", "pk": 1, "fields": ***REMOVED***"name": "HTML Reference", "date_created": "2021-12-16T13:20:04.433Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articleseries", "pk": 2, "fields": ***REMOVED***"name": "CSS Reference", "date_created": "2021-12-16T13:21:05.749Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articleseries", "pk": 3, "fields": ***REMOVED***"name": "Python Reference", "date_created": "2021-12-16T13:21:06.712Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articlecategory", "pk": 1, "fields": ***REMOVED***"name": "Python", "date_created": "2021-12-16T12:57:20.786Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articlecategory", "pk": 2, "fields": ***REMOVED***"name": "Python", "date_created": "2021-12-16T12:59:28.654Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articlecategory", "pk": 3, "fields": ***REMOVED***"name": "Javascript", "date_created": "2021-12-16T13:04:32.256Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articlecategory", "pk": 4, "fields": ***REMOVED***"name": "HTML", "date_created": "2021-12-16T13:04:33.469Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articlecategory", "pk": 5, "fields": ***REMOVED***"name": "CSS", "date_created": "2021-12-16T13:04:34.628Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.articlecategory", "pk": 6, "fields": ***REMOVED***"name": "Algorithms", "date_created": "2021-12-16T13:04:35.701Z"***REMOVED******REMOVED***, ***REMOVED***"model": "blog.article", "pk": 1, "fields": ***REMOVED***"user": 1, "image": "image/blog/webscrapping.jpeg", "title": "Data Scrapping: Requests and Beautiful Soup", "content": "<p>Web scraping is the term for using a program to download and process content from the Web.</p><h5>Prerequisite for web scrapping in python</h5><ul><li><u>Webbrowser</u> - Comes with Python and opens a browser to a specific page.</li><li><u>Requests</u> - Downloads files and web pages from the Internet.</li><li><u>Beautiful Soup</u> - Parses HTML, the format that web pages are written in.</li><li><u>Selenium</u> - Launches and controls a web browser. Selenium is able to fill in forms and simulate mouse clicks in this browser.</li><li><u>Scrapy </u>- <span class=\"ILfuVd\"><span class=\"hgKElc\"> tool specifically created for downloading, cleaning and saving data from the web and will help you end-to-end</span></span></li></ul><h3>Webbrowser Module</h3><p>The webbrowser module’s open() function can launch a new browser to a specified URL.</p><h6>Example:</h6><pre>import webbrowser<br>webbrowser.open('http://inventwithpython.com/')</pre><h3>Requests Module<br></h3><p>The\r\n requests module lets you easily download files from the Web without \r\nhaving to worry about complicated issues such as network errors, \r\nconnection problems, and data compression.</p><p>The request module has ability to: &nbsp;&nbsp;&nbsp; </p><ul><li>Make requests using the most common HTTP methods&nbsp;&nbsp;&nbsp;&nbsp; </li><li>Customize your requests’ headers and data, using the query string and message body&nbsp;&nbsp;&nbsp;&nbsp; </li><li>Inspect data from your requests and responses&nbsp;&nbsp;&nbsp;&nbsp; </li><li>Make authenticated requests&nbsp;&nbsp;&nbsp;&nbsp; </li><li>Configure your requests to help prevent your application from backing up or slowing down<br></li></ul><h4>The GET Request </h4><p>One of the most common HTTP methods is <code>GET</code>. The <code>GET</code> method indicates that you’re trying to get or retrieve data from a specified resource. To make a <code>GET</code> request, invoke <code>requests.get()</code>.</p><h6>Example:</h6><pre><code><span class=\"gp\"></span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">)</span>\r\n<span class=\"go\">#&lt;Response [200]&gt;</span></code></pre><h4>The Response&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </h4><p>A <code>Response</code> is a powerful object for inspecting the results of the request. <br></p><h5>Status Codes&nbsp;&nbsp;&nbsp;&nbsp; </h5><p>A status code informs you of the status of the request, for instance:</p><ul><li><code>200 OK</code> status means that your request was successful.</li><li><code>404 NOT FOUND</code> status means that the resource you were looking for was not found.</li><li><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\" target=\"_blank\">click here for more</a></li></ul><p>By accessing <code>.status_code</code>, you can see the status code that the server returned:</p>\r\n<pre><span></span><code><span class=\"gp\"><code><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">)<br></span></code></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span>\r\n<span class=\"go\">200</span>\r\n</code></pre><h5>Content&nbsp;&nbsp;&nbsp;&nbsp; </h5><p>Using the attributes and methods of <code>Response</code>, you can view the payload in a variety of different formats.\r\n</p><p>To see the response’s content in <a href=\"https://realpython.com/python-strings/\"><code>bytes</code></a>, you use <code>.content</code>:</p><pre><code><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">)</span>\r\n<span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">content</span>\r\n<span class=\"go\">#b'***REMOVED***\"current_user_url\":\"https://api.github.com/user\",\"current_us...</span></code></pre><p>To see <code>response</code>  in <a href=\"https://realpython.com/python-data-types/\">string</a> using a character encoding such as <a href=\"https://en.wikipedia.org/wiki/UTF-8\">UTF-8</a>. <code>response</code> will do that for you when you access <code>.text</code>:</p>\r\n<pre><span></span><code><span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span>\r\n<span class=\"go\">#'***REMOVED***\"current_user_url\":\"https://api.github.com/user\",\"current_user...</span></code></pre><p>You can provide an explicit encoding by setting <code>.encoding</code> before accessing <code>.text</code>:</p><pre><code><span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">encoding</span> <span class=\"o\">=</span> <span class=\"s1\">'utf-8'</span> <span class=\"c1\"># Optional: requests infers this internally</span>\r\n<span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span>\r\n<span class=\"go\">#'***REMOVED***\"current_user_url\":\"https://api.github.com/user\",\"current_user...</span></code></pre><p>If you take a look at the response, you’ll see that it is actually serialized JSON content. To get a dictionary, you use <code>.json()</code>:</p><pre><code><span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\r\n<span class=\"go\">***REMOVED***'current_user_url': 'https://api.github.com/user', 'current_user_...</span></code></pre><h5>Headers&nbsp; </h5><p>If\r\n you need more information, like metadata about the response itself, \r\nyou’ll need to look at the response’s headers. It  can give you useful \r\ninformation, such as the content type of the \r\nresponse payload and a time limit on how long to cache the response. To \r\nview these headers, access <code>.headers</code>:</p><pre><code><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">headers</span>\r\n<span class=\"go\">#***REMOVED***'Server': 'GitHub.com', 'Date': 'Mon, 10 Dec 2018 17:49:54 GMT', '...</span></code></pre><p><code>.headers</code> returns a dictionary-like object, allowing you \r\nto access header values by key. For example, to see the content type of \r\nthe response payload, you can access <code>Content-Type</code>:</p>\r\n<pre><span></span><code><span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">]</span>\r\n<span class=\"go\">#'application/json; charset=utf-8'</span>\r\n</code></pre><h4>Query String Parameters </h4><p>One common way to customize a <code>GET</code> request is to pass values through <a href=\"https://en.wikipedia.org/wiki/Query_string\">query string</a> parameters in the URL. To do this using <code>get()</code>, you pass data to <code>params</code>. For example, you can use GitHub’s <a href=\"https://developer.github.com/v3/search/\">Search</a> API to look for the <code>requests</code> library:</p><pre><code><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\r\n\r\n<span class=\"c1\"># Search GitHub's repositories for requests</span>\r\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\r\n    <span class=\"s1\">'https://api.github.com/search/repositories'</span><span class=\"p\">,</span>\r\n<span class=\"hll\">    <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'q'</span><span class=\"p\">:</span> <span class=\"s1\">'requests+language:python'</span><span class=\"p\">***REMOVED***,</span>\r\n</span><span class=\"p\">)</span>\r\n\r\n<span class=\"c1\"># Inspect some attributes of the `requests` repository</span>\r\n<span class=\"n\">json_response</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\r\n<span class=\"n\">repository</span> <span class=\"o\">=</span> <span class=\"n\">json_response</span><span class=\"p\">[</span><span class=\"s1\">'items'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\r\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Repository name: </span><span class=\"si\">***REMOVED***</span><span class=\"n\">repository</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">]</span><span class=\"si\">***REMOVED***</span><span class=\"s1\">'</span><span class=\"p\">)</span>  <span class=\"c1\"># Python 3.6+</span>\r\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Repository description: </span><span class=\"si\">***REMOVED***</span><span class=\"n\">repository</span><span class=\"p\">[</span><span class=\"s2\">\"description\"</span><span class=\"p\">]</span><span class=\"si\">***REMOVED***</span><span class=\"s1\">'</span><span class=\"p\">)</span>  <span class=\"c1\"># Python 3.6+</span>\r\n</code></pre><p>You can pass <code>params</code> to <code>get()</code> in the form of a dictionary, as you have just done, or as a list of tuples:</p>\r\n<div class=\"highlight python repl\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\r\n<span class=\"gp\">... </span>    <span class=\"s1\">'https://api.github.com/search/repositories'</span><span class=\"p\">,</span>\r\n<span class=\"gp\">... </span>    <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s1\">'q'</span><span class=\"p\">,</span> <span class=\"s1\">'requests+language:python'</span><span class=\"p\">)],</span>\r\n<span class=\"gp\">... </span><span class=\"p\">)</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n</code></pre></div>\r\n<p>You can even pass the values as <code>bytes</code>:</p>\r\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\r\n<span class=\"gp\">... </span>    <span class=\"s1\">'https://api.github.com/search/repositories'</span><span class=\"p\">,</span>\r\n<span class=\"gp\">... </span>    <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'q=requests+language:python'</span><span class=\"p\">,</span>\r\n<span class=\"gp\">... </span><span class=\"p\">)</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n</code></pre><h4>Request Headers </h4><p>You can also customize your \r\nrequests by adding or modifying the headers you send. To customize \r\nheaders, you pass a dictionary of HTTP headers to <code>get()</code> using the <code>headers</code>\r\n parameter. </p><p>For example, you can change your previous search request to \r\nhighlight matching search terms in the results by specifying the <code>text-match</code> media type in the <code>Accept</code> header:</p><pre><code><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\r\n\r\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\r\n    <span class=\"s1\">'https://api.github.com/search/repositories'</span><span class=\"p\">,</span>\r\n    <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'q'</span><span class=\"p\">:</span> <span class=\"s1\">'requests+language:python'</span><span class=\"p\">***REMOVED***,</span>\r\n<span class=\"hll\">    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'Accept'</span><span class=\"p\">:</span> <span class=\"s1\">'application/vnd.github.v3.text-match+json'</span><span class=\"p\">***REMOVED***,</span>\r\n</span><span class=\"p\">)</span>\r\n\r\n<span class=\"c1\"># View the new `text-matches` array which provides information</span>\r\n<span class=\"c1\"># about your search term within the results</span>\r\n<span class=\"n\">json_response</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\r\n<span class=\"n\">repository</span> <span class=\"o\">=</span> <span class=\"n\">json_response</span><span class=\"p\">[</span><span class=\"s1\">'items'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\r\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Text matches: </span><span class=\"si\">***REMOVED***</span><span class=\"n\">repository</span><span class=\"p\">[</span><span class=\"s2\">\"text_matches\"</span><span class=\"p\">]</span><span class=\"si\">***REMOVED***</span><span class=\"s1\">'</span><span class=\"p\">)</span>\r\n</code></pre><h4>Other HTTP Methods </h4><p>Aside from <code>GET</code>, other popular HTTP methods include <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, <code>HEAD</code>, <code>PATCH</code>, and <code>OPTIONS</code>. <code>requests</code> provides a method, with a similar signature to <code>get()</code>, for each of these HTTP methods:</p>\r\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/post'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'key'</span><span class=\"p\">:</span><span class=\"s1\">'value'</span><span class=\"p\">***REMOVED***)</span>\r\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/put'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'key'</span><span class=\"p\">:</span><span class=\"s1\">'value'</span><span class=\"p\">***REMOVED***)</span>\r\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/delete'</span><span class=\"p\">)</span>\r\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/get'</span><span class=\"p\">)</span>\r\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">patch</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/patch'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'key'</span><span class=\"p\">:</span><span class=\"s1\">'value'</span><span class=\"p\">***REMOVED***)</span>\r\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/get'</span><span class=\"p\">)</span>\r\n</code></pre><h4>The Message Body </h4><p><code>POST</code>, <code>PUT</code>, and the less common <code>PATCH</code> requests pass their data through the message body rather than through parameters in the query string. Using <code>requests</code>, you’ll pass the payload to the corresponding function’s <code>data</code> parameter.</p><p><code>data</code> takes a dictionary, a list of tuples, bytes, or a file-like object.</p><pre><code><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/post'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'key'</span><span class=\"p\">:</span><span class=\"s1\">'value'</span><span class=\"p\">***REMOVED***)</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n</code></pre><p>You can also send that same data as a list of tuples:</p>\r\n<div class=\"highlight python repl\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/post'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s1\">'key'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">)])</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n</code></pre></div>\r\n<p>If, however, you need to send JSON data, you can use the <code>json</code> parameter. When you pass JSON data via <code>json</code>, <code>requests</code> will serialize your data and add the correct <code>Content-Type</code> header for you.</p><pre><code><span class=\"gp\"></span><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/post'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'key'</span><span class=\"p\">:</span><span class=\"s1\">'value'</span><span class=\"p\">***REMOVED***)</span>\r\n<span class=\"gp\"></span><span class=\"n\">json_response</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\r\n<span class=\"gp\"></span><span class=\"n\">json_response</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span>\r\n<span class=\"go\">'***REMOVED***\"key\": \"value\"***REMOVED***'</span>\r\n<span class=\"gp\"></span><span class=\"n\">json_response</span><span class=\"p\">[</span><span class=\"s1\">'headers'</span><span class=\"p\">][</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">]</span>\r\n<span class=\"go\">'application/json'</span>\r\n</code></pre><h4>Inspecting Your Request </h4><p>When you make a request, the <code>requests</code> library prepares \r\nthe request before actually sending it to the destination server. \r\nRequest preparation includes things like validating headers and \r\nserializing JSON content.</p>\r\n<p>You can view the <code>PreparedRequest</code> by accessing <code>.request</code>:</p>\r\n<pre><span></span><code><span class=\"gp\"></span><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/post'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">***REMOVED***</span><span class=\"s1\">'key'</span><span class=\"p\">:</span><span class=\"s1\">'value'</span><span class=\"p\">***REMOVED***)</span>\r\n<span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">]</span>\r\n<span class=\"go\">'application/json'</span>\r\n<span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">url</span>\r\n<span class=\"go\">'https://httpbin.org/post'</span>\r\n<span class=\"gp\"></span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">body</span>\r\n<span class=\"go\">b'***REMOVED***\"key\": \"value\"***REMOVED***'</span>\r\n</code></pre><h4>Authentication </h4><p>Authentication helps a service understand who you are. Typically, you\r\n provide your credentials to a server by passing data through the <code>Authorization</code>\r\n header or a custom header defined by the service. All the request \r\nfunctions you’ve seen to this point provide a parameter called <code>auth</code>, which allows you to pass your credentials.</p>\r\n<p>One example of an API that requires authentication is GitHub’s <a href=\"https://developer.github.com/v3/users/#get-the-authenticated-user\">Authenticated User</a>\r\n API. This endpoint provides information about the authenticated user’s \r\nprofile. To make a request to the Authenticated User API, you can pass \r\nyour GitHub username and password in a tuple to <code>get()</code>:</p>\r\n<div class=\"highlight python repl\"><pre><span></span><code><span class=\"gp\"></span><span class=\"kn\">from</span> <span class=\"nn\">getpass</span> <span class=\"kn\">import</span> <span class=\"n\">getpass</span>\r\n<span class=\"gp\"></span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com/user'</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"n\">getpass</span><span class=\"p\">()))</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n</code></pre></div>\r\n<p>The request succeeded if the credentials you passed in the tuple to <code>auth</code> are valid. If you try to make this request with no credentials, you’ll see that the status code is <code>401 Unauthorized</code>:</p>\r\n<pre><span></span><code><span class=\"gp\"></span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com/user'</span><span class=\"p\">)</span>\r\n<span class=\"go\">&lt;Response [401]&gt;</span>\r\n</code></pre><h4>SSL Certificate Verification </h4><p>Any time the data you are trying to send or receive is sensitive, \r\nsecurity is important. The way that you communicate with secure sites \r\nover HTTP is by establishing an encrypted connection using SSL, which \r\nmeans that verifying the target server’s SSL Certificate is critical.</p>\r\n<p>The good news is that <code>requests</code> does this for you by default. However, there are some cases where you might want to change this behavior.</p>\r\n<p>If you want to disable SSL Certificate verification, you pass <code>False</code> to the <code>verify</code> parameter of the request function:</p>\r\n<pre><span></span><code><span class=\"gp\"></span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">,</span> <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\r\n<span class=\"go\">InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings</span>\r\n<span class=\"go\">  InsecureRequestWarning)</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n</code></pre><h4>Performance&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </h4><p>When using <code>requests</code>, especially in a production application\r\n environment, it’s important to consider performance implications. \r\nFeatures like timeout control, sessions, and retry limits can help you \r\nkeep your application running smoothly.</p><h5>Timeouts&nbsp;&nbsp;&nbsp;&nbsp;</h5><p>By default, <code>requests</code> will wait indefinitely on the \r\nresponse, so you should almost always specify a timeout duration to \r\nprevent these things from happening. To set the request’s timeout, use \r\nthe <code>timeout</code> parameter. <code>timeout</code> can be an integer or float representing the number of seconds to wait on a response before timing out:</p>\r\n<pre><span></span><code><span class=\"gp\"></span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n<span class=\"gp\"></span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">3.05</span><span class=\"p\">)</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n</code></pre><p> </p><p>You can also pass tuple to <code>timeout</code> with the first element being a connect \r\ntimeout (the time it allows for the client to establish a connection to \r\nthe server), and the second being a read timeout (the time it will wait \r\non a response once your client has established a connection):\r\n</p><pre><span></span><code><span class=\"gp\"></span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\r\n<span class=\"go\">&lt;Response [200]&gt;</span>\r\n</code></pre><p>If the request times out, then the function will raise a <code>Timeout</code> exception:\r\n</p><div class=\"highlight python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\r\n<span class=\"kn\">from</span> <span class=\"nn\">requests.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">Timeout</span>\r\n\r\n<span class=\"k\">try</span><span class=\"p\">:</span>\r\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\r\n<span class=\"k\">except</span> <span class=\"n\">Timeout</span><span class=\"p\">:</span>\r\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The request timed out'</span><span class=\"p\">)</span>\r\n<span class=\"k\">else</span><span class=\"p\">:</span>\r\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The request did not time out'</span><span class=\"p\">)</span>\r\n</code></pre></div><h5>The Session Object&nbsp;&nbsp;&nbsp;&nbsp; </h5><p>If you need to fine-tune your control over how requests are being \r\nmade or improve the performance of your requests, you may need to use a <code>Session</code> instance directly.\r\n</p><p>Sessions are used to persist parameters across requests. For example,\r\n if you want to use the same authentication across multiple requests, \r\nyou could use a session:</p><pre><code><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\r\n<span class=\"kn\">from</span> <span class=\"nn\">getpass</span> <span class=\"kn\">import</span> <span class=\"n\">getpass</span>\r\n\r\n<span class=\"c1\"># By using a context manager, you can ensure the resources used by</span>\r\n<span class=\"c1\"># the session will be released after use</span>\r\n<span class=\"k\">with</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\r\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"n\">getpass</span><span class=\"p\">())</span>\r\n\r\n    <span class=\"c1\"># Instead of requests.get(), you'll use session.get()</span>\r\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com/user'</span><span class=\"p\">)</span>\r\n\r\n<span class=\"c1\"># You can inspect the response just like you did before</span>\r\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">)</span>\r\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">())</span>\r\n</code></pre><h5>Max Retries&nbsp; </h5><p>When a request fails, you may want your application to retry the same request. However, <code>requests</code> will not do this for you by default. To apply this functionality, you need to implement a custom <a href=\"http://docs.python-requests.org/en/master/user/advanced/#transport-adapters\">Transport Adapter</a>.</p>\r\n<p>Transport Adapters let you define a set of configurations per service\r\n you’re interacting with. For example, let’s say you want all requests \r\nto <code>https://api.github.com</code> to retry three times before finally raising a <code>ConnectionError</code>. You would build a Transport Adapter, set its <code>max_retries</code> parameter, and mount it to an existing <code>Session</code>:</p><pre><code><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\r\n<span class=\"kn\">from</span> <span class=\"nn\">requests.adapters</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPAdapter</span>\r\n<span class=\"kn\">from</span> <span class=\"nn\">requests.exceptions</span> <span class=\"kn\">import</span> <span class=\"ne\">ConnectionError</span>\r\n\r\n<span class=\"n\">github_adapter</span> <span class=\"o\">=</span> <span class=\"n\">HTTPAdapter</span><span class=\"p\">(</span><span class=\"n\">max_retries</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\r\n\r\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\r\n\r\n<span class=\"c1\"># Use `github_adapter` for all requests to endpoints that start with this URL</span>\r\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">mount</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">,</span> <span class=\"n\">github_adapter</span><span class=\"p\">)</span>\r\n\r\n<span class=\"k\">try</span><span class=\"p\">:</span>\r\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com'</span><span class=\"p\">)</span>\r\n<span class=\"k\">except</span> <span class=\"ne\">ConnectionError</span> <span class=\"k\">as</span> <span class=\"n\">ce</span><span class=\"p\">:</span>\r\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ce</span><span class=\"p\">)</span>\r\n</code></pre><h4>Saving Downloaded Files to the Hard Drive</h4><p>From here, you can save the web page to a file on your hard drive with the standard open() function and write() method. Example:<br></p><pre>import requests<br>res = requests.get('http://www.gutenberg.org/cache/epub/1112/pg1112.txt')<br>res.raise_for_status()<br>playFile = open('RomeoAndJuliet.txt', 'wb')<br>for chunk in res.iter_content(100000):<br>playFile.write(chunk)<br>playFile.close()<br></pre><h3>BeautifulSoup Module<br></h3><p>Beautiful\r\n Soup is a module for extracting information from an HTML page.The \r\nBeautifulSoup module’s name is bs4 (for Beautiful Soup, version 4).</p><p>The\r\n bs4.BeautifulSoup() function needs to be called with a string \r\ncontaining the HTML it will parse. The bs4.BeautifulSoup() function \r\nreturns is a BeautifulSoup object.<br></p><pre>import requests, bs4<br>res = requests.get('http://nostarch.com')<br>res.raise_for_status()<br>noStarchSoup = bs4.BeautifulSoup(res.text)<br></pre><p>You can also load an HTML file from your hard drive by passing a File object to bs4.BeautifulSoup().</p><pre>exampleFile = open('example.html')<br>exampleSoup = bs4.BeautifulSoup(exampleFile)<br></pre><h4>Finding an Element with the select() Method</h4><p>You\r\n can retrieve a web page element from a BeautifulSoup object by calling \r\nthe select() method and passing a string of a CSS selector for the \r\nelement you are looking for.</p><table class=\"table table-bordered\"><tbody><tr><td><u><b>Selector passed to the select() method </b></u><br></td><td><u><b>Will match . . .</b></u></td></tr><tr><td>soup.select('div') <br></td><td>All elements named &lt;div&gt;</td></tr><tr><td>soup.select('#author') <br></td><td>The element with an id attribute of author</td></tr><tr><td>soup.select('.notice') <br></td><td>All elements that use a CSS class attribute named notice</td></tr><tr><td>soup.select('div span') <br></td><td>All elements named &lt;span&gt; that are within an element named &lt;div&gt;</td></tr><tr><td>soup.select('div &gt; span') <br></td><td>All elements named &lt;span&gt; that are directly within an element named &lt;div&gt; , with no other element in between</td></tr><tr><td>soup.select('input[name]')</td><td> All elements named &lt;input&gt; that have a name attribute with any value</td></tr><tr><td>soup.select('input[type=\"button\"]')</td><td> All elements named &lt;input&gt; that have an attribute named type with value button</td></tr></tbody></table><p>The\r\n various selector patterns can be combined to make sophisticated \r\nmatches. For example, soup.select('p #author') will match any element \r\nthat has an id attribute of author , as long as it is also inside a \r\n&lt;p&gt; element.<br>The select() method will return a list of Tag \r\nobjects, Tag values also have an attrs attribute that shows all the HTML\r\n attributes of the tag as a dictionary.<br></p><pre>import bs4</pre><pre>&gt;&gt;&gt; exampleFile = open('example.html')</pre><pre>&gt;&gt;&gt; exampleSoup = bs4.BeautifulSoup(exampleFile.read())</pre><pre>&gt;&gt;&gt; elems = exampleSoup.select('#author')</pre><pre>&gt;&gt;&gt; type(elems)</pre><pre>&lt;class 'list'&gt;</pre><pre>&gt;&gt;&gt; len(elems)</pre><pre>1</pre><pre>&gt;&gt;&gt; type(elems[0])</pre><pre>&lt;class 'bs4.element.Tag'&gt;</pre><pre>&gt;&gt;&gt; elems[0].getText()</pre><pre>'Al Sweigart'</pre><pre>&gt;&gt;&gt; str(elems[0])</pre><pre>'&lt;span id=\"author\"&gt;Al Sweigart&lt;/span&gt;'</pre><pre>&gt;&gt;&gt; elems[0].attrs</pre><pre>***REMOVED***'id': 'author'***REMOVED***</pre><p>You can also pull all the &lt;p&gt; elements from the BeautifulSoup object.</p><pre>&gt;&gt;&gt; pElems = exampleSoup.select('p')</pre><pre>&gt;&gt;&gt; str(pElems[0])</pre><pre>'&lt;p&gt;Download my &lt;strong&gt;Python&lt;/strong&gt; book from &lt;a href=\"http://</pre><pre>inventwithpython.com\"&gt;my website&lt;/a&gt;.&lt;/p&gt;'</pre><pre>&gt;&gt;&gt; pElems[0].getText()</pre><pre>'Download my Python book from my website.'</pre><pre>&gt;&gt;&gt; str(pElems[1])</pre><pre>'&lt;p class=\"slogan\"&gt;Learn Python the easy way!&lt;/p&gt;'</pre><pre>&gt;&gt;&gt; pElems[1].getText()</pre><pre>'Learn Python the easy way!'</pre><pre>&gt;&gt;&gt; str(pElems[2])</pre><pre>'&lt;p&gt;By &lt;span id=\"author\"&gt;Al Sweigart&lt;/span&gt;&lt;/p&gt;'</pre><pre>&gt;&gt;&gt; pElems[2].getText()</pre><pre>'By Al Sweigart'</pre><h5>Getting Data from an Element’s Attributes</h5><p>The\r\n get() method for Tag objects makes it simple to access attribute values\r\n from an element. The method is passed a string of an attribute name and\r\n returns that attribute’s value.<br></p><pre>&gt;&gt;&gt; import bs4</pre><pre>&gt;&gt;&gt; soup = bs4.BeautifulSoup(open('example.html'))</pre><pre>&gt;&gt;&gt; spanElem = soup.select('span')[0]</pre><pre>&gt;&gt;&gt; str(spanElem)</pre><pre>'&lt;span id=\"author\"&gt;Al Sweigart&lt;/span&gt;'</pre><pre>&gt;&gt;&gt; spanElem.get('id')</pre><pre>'author'</pre><pre>&gt;&gt;&gt; spanElem.get('some_nonexistent_addr') == None</pre><pre>True</pre><pre>&gt;&gt;&gt; spanElem.attrs</pre><pre>***REMOVED***'id': 'author'***REMOVED***</pre><h4>find() and find_all() with beautifulsoup<br></h4><p>With\r\n find and find_all you can easily filter HTML pages to find lists of \r\ndesired tags, or a single tag, based on their various attributes.</p><pre>find_all(tag, attributes, recursive, text, limit, keywords)<br>find(tag, attributes, recursive, text, keywords)</pre><ul><li>The tag argument is one that you’ve seen before; you can pass a string name of a tag or even a Python list of string tag names.<br></li></ul><pre>.find_all(['h1','h2','h3','h4','h5','h6'])</pre><ul><li>The attributes argument takes a Python dictionary of attributes and matches tags that contain any one of those attributes.<br></li></ul><pre>.find_all('span', ***REMOVED***'class':***REMOVED***'green', 'red'***REMOVED******REMOVED***)</pre><ul><li>The\r\n recursive argument is a boolean. How deeply into the document do you \r\nwant to go? If recursive is set to True , the find_all function looks \r\ninto children, and children’s children, for tags that match your \r\nparameters. If it is False , it will look only at the top-level tags in \r\nyour document. The default is set to True.</li><li>The text argument is \r\nunusual in that it matches based on the text content of the tags, rather\r\n than properties of the tags themselves.</li></ul><pre>nameList = bs.find_all(text='the prince')</pre><ul><li>The\r\n limit argument, of course, is used only in the find_all method; find is\r\n equivalent to the same find_all call, with a limit of 1. You might set \r\nthis if you’re interested only in retrieving the first x items from the \r\npage.</li><li>The keyword argument allows you to select tags that contain a particular attribute or set of attributes.<br></li></ul><pre>title = bs.find_all(id='title', class_='text')</pre><p><br></p><p><br></p><p><br></p><p>REFERENCE</p><ol><li>Automating Boring Stuff with Python, Chapter 11: Web Scrabbing, Page 233 to Page 248.<br></li><li>Real Python - <a href=\"https://realpython.com/python-requests/\">https://realpython.com/python-requests/</a></li><li>Web Scrapping with python, 2nd Edition, Chapter 2: Advanced HTML Parsing, Page 18 - 20<br><br></li></ol><p><br><br></p>", "tags": "python, data scraping,web", "status": "Publish", "views": 13, "date_created": "2021-12-16T13:48:41.244Z", "category": 1, "series": null***REMOVED******REMOVED***, ***REMOVED***"model": "blog.article", "pk": 2, "fields": ***REMOVED***"user": 1, "image": "image/blog/Screenshot_from_2021-08-10_10-46-54.png", "title": "Sending Email in python", "content": "<p>Python comes with the built-in <code>smtplib</code> module for sending emails using the Simple Mail Transfer Protocol (SMTP). <code>smtplib</code> uses the RFC 821 protocol for SMTP. </p><p>Using Python emailing capabilities, we can achieve the folllowing :</p><ul><li>Set up a secure connection using SMTP_SSL() and .starttls()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </li><li>Use Python’s built-in smtplib library to send basic emails&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </li><li>Send emails with HTML content and attachments using the email package&nbsp;&nbsp;&nbsp;&nbsp; </li><li>Send multiple personalized emails using a CSV file with contact data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </li><li>Use the Yagmail package to send email through your Gmail account using only a few lines of code</li></ul><h4>Starting a Secure SMTP Connection</h4>\r\n<p>When you send emails through Python, you should make sure that your \r\nSMTP connection is encrypted, so that your message and login credentials\r\n are not easily accessed by others. SSL (Secure Sockets Layer) and TLS \r\n(Transport Layer Security) are two protocols that can be used to encrypt\r\n an SMTP connection.</p>\r\n<p>There are two ways to start a secure connection with your email server:</p>\r\n<ul><li>Start an SMTP connection that is secured from the beginning using <code>SMTP_SSL()</code>.</li><li>Start an unsecured SMTP connection that can then be encrypted using <code>.starttls()</code>. </li></ul><p><a href=\"https://docs.python.org/3/library/smtplib.html\"><code>smtplib</code></a> is Python’s built-in module for sending emails to any Internet machine with an SMTP or ESMTP listener daemon. </p><h5>Option 1: Using <code>SMTP_SSL()</code></h5>\r\nThe code example below creates a secure connection with Gmail’s SMTP server, using the <code>SMTP_SSL()</code> of <code>smtplib</code> to initiate a TLS-encrypted connection.<pre><code><span class=\"kn\">import</span> <span class=\"nn\">smtplib</span><span class=\"o\">,</span> <span class=\"nn\">ssl</span>\r\n\r\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">465</span>  <span class=\"c1\"># For SSL</span>\r\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Type your password and press enter: \"</span><span class=\"p\">)</span>\r\n\r\n<span class=\"c1\"># Create a secure SSL context</span>\r\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">create_default_context</span><span class=\"p\">()</span>\r\n\r\n<span class=\"k\">with</span> <span class=\"n\">smtplib</span><span class=\"o\">.</span><span class=\"n\">SMTP_SSL</span><span class=\"p\">(</span><span class=\"s2\">\"smtp.gmail.com\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">server</span><span class=\"p\">:</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s2\">\"my@gmail.com\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\r\n    <span class=\"c1\"># TODO: Send email here</span>\r\n</code></pre><h5>Option 2: Using <code>.starttls()</code></h5><p>we can create an unsecured SMTP connection and encrypt it using <code>.starttls()</code>.</p><p>To do this, create an instance of <code>smtplib.SMTP</code>, which \r\nencapsulates an SMTP connection and allows you access to its methods. I \r\nrecommend defining your SMTP server and port at the beginning of your \r\nscript to configure them easily.</p>\r\n<p>The code snippet below uses the construction <code>server = SMTP()</code>, rather than the format <code>with SMTP() as server:</code>\r\n which we used in the previous example. To make sure that your code \r\ndoesn’t crash when something goes wrong, put your main code in a <code>try</code> block, and let an <code>except</code> block print any error messages to <code>stdout</code>:</p><pre><code><span class=\"kn\">import</span> <span class=\"nn\">smtplib</span><span class=\"o\">,</span> <span class=\"nn\">ssl</span>\r\n\r\n<span class=\"n\">smtp_server</span> <span class=\"o\">=</span> <span class=\"s2\">\"smtp.gmail.com\"</span>\r\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">587</span>  <span class=\"c1\"># For starttls</span>\r\n<span class=\"n\">sender_email</span> <span class=\"o\">=</span> <span class=\"s2\">\"my@gmail.com\"</span>\r\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Type your password and press enter: \"</span><span class=\"p\">)</span>\r\n\r\n<span class=\"c1\"># Create a secure SSL context</span>\r\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">create_default_context</span><span class=\"p\">()</span>\r\n\r\n<span class=\"c1\"># Try to log in to server and send email</span>\r\n<span class=\"k\">try</span><span class=\"p\">:</span>\r\n    <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">smtplib</span><span class=\"o\">.</span><span class=\"n\">SMTP</span><span class=\"p\">(</span><span class=\"n\">smtp_server</span><span class=\"p\">,</span><span class=\"n\">port</span><span class=\"p\">)</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">ehlo</span><span class=\"p\">()</span> <span class=\"c1\"># Can be omitted</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">starttls</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"c1\"># Secure the connection</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">ehlo</span><span class=\"p\">()</span> <span class=\"c1\"># Can be omitted</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">sender_email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\r\n    <span class=\"c1\"># TODO: Send email here</span>\r\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\r\n    <span class=\"c1\"># Print any error messages to stdout</span>\r\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\r\n<span class=\"k\">finally</span><span class=\"p\">:</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">quit</span><span class=\"p\">()</span> </code></pre><h4>Sending Your Plain-text Email</h4><p>you can send your email using <code>.sendmail()</code></p><p>The code example below sends a plain-text email using <code>SMTP_SSL()</code>:</p>\r\n<div class=\"highlight python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">smtplib</span><span class=\"o\">,</span> <span class=\"nn\">ssl</span>\r\n\r\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">465</span>  <span class=\"c1\"># For SSL</span>\r\n<span class=\"n\">smtp_server</span> <span class=\"o\">=</span> <span class=\"s2\">\"smtp.gmail.com\"</span>\r\n<span class=\"n\">sender_email</span> <span class=\"o\">=</span> <span class=\"s2\">\"my@gmail.com\"</span>  <span class=\"c1\"># Enter your address</span>\r\n<span class=\"n\">receiver_email</span> <span class=\"o\">=</span> <span class=\"s2\">\"your@gmail.com\"</span>  <span class=\"c1\"># Enter receiver address</span>\r\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Type your password and press enter: \"</span><span class=\"p\">)</span>\r\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\</span>\r\n<span class=\"s2\">Subject: Hi there</span>\r\n\r\n<span class=\"s2\">This message is sent from Python.\"\"\"</span>\r\n\r\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">create_default_context</span><span class=\"p\">()</span>\r\n<span class=\"k\">with</span> <span class=\"n\">smtplib</span><span class=\"o\">.</span><span class=\"n\">SMTP_SSL</span><span class=\"p\">(</span><span class=\"n\">smtp_server</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">server</span><span class=\"p\">:</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">sender_email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">sendmail</span><span class=\"p\">(</span><span class=\"n\">sender_email</span><span class=\"p\">,</span> <span class=\"n\">receiver_email</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\r\n</code></pre></div><p><code></code></p><p>For comparison, here is a code example that sends a plain-text email over an SMTP connection secured with <code>.starttls()</code>. </p><pre><code><span class=\"kn\">import</span> <span class=\"nn\">smtplib</span><span class=\"o\">,</span> <span class=\"nn\">ssl</span>\r\n\r\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">587</span>  <span class=\"c1\"># For starttls</span>\r\n<span class=\"n\">smtp_server</span> <span class=\"o\">=</span> <span class=\"s2\">\"smtp.gmail.com\"</span>\r\n<span class=\"n\">sender_email</span> <span class=\"o\">=</span> <span class=\"s2\">\"my@gmail.com\"</span>\r\n<span class=\"n\">receiver_email</span> <span class=\"o\">=</span> <span class=\"s2\">\"your@gmail.com\"</span>\r\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Type your password and press enter:\"</span><span class=\"p\">)</span>\r\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\</span>\r\n<span class=\"s2\">Subject: Hi there</span>\r\n\r\n<span class=\"s2\">This message is sent from Python.\"\"\"</span>\r\n\r\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">create_default_context</span><span class=\"p\">()</span>\r\n<span class=\"k\">with</span> <span class=\"n\">smtplib</span><span class=\"o\">.</span><span class=\"n\">SMTP</span><span class=\"p\">(</span><span class=\"n\">smtp_server</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">server</span><span class=\"p\">:</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">ehlo</span><span class=\"p\">()</span>  <span class=\"c1\"># Can be omitted</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">starttls</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">ehlo</span><span class=\"p\">()</span>  <span class=\"c1\"># Can be omitted</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">sender_email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">sendmail</span><span class=\"p\">(</span><span class=\"n\">sender_email</span><span class=\"p\">,</span> <span class=\"n\">receiver_email</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\r\n</code></pre><h4>Sending Fancy Emails</h4><p>Python’s built-in <code>email</code> package allows you to structure more fancy emails, which can then be transferred with <code>smtplib</code> as you have done already.</p><h5>Including HTML Content</h5><p>Today’s most common type of email is the MIME (Multipurpose Internet \r\nMail Extensions) Multipart email, combining HTML and plain-text. MIME \r\nmessages are handled by Python’s <code>email.mime</code> module. For a detailed description, check <a href=\"https://docs.python.org/3/library/email.mime.html\">the documentation</a>.</p><p>As not all email clients display HTML content by default, and some \r\npeople choose only to receive plain-text emails for security reasons, it\r\n is important to include a plain-text alternative for HTML messages.</p><pre><code><span class=\"kn\">import</span> <span class=\"nn\">smtplib</span><span class=\"o\">,</span> <span class=\"nn\">ssl</span>\r\n<span class=\"kn\">from</span> <span class=\"nn\">email.mime.text</span> <span class=\"kn\">import</span> <span class=\"n\">MIMEText</span>\r\n<span class=\"kn\">from</span> <span class=\"nn\">email.mime.multipart</span> <span class=\"kn\">import</span> <span class=\"n\">MIMEMultipart</span>\r\n\r\n<span class=\"n\">sender_email</span> <span class=\"o\">=</span> <span class=\"s2\">\"my@gmail.com\"</span>\r\n<span class=\"n\">receiver_email</span> <span class=\"o\">=</span> <span class=\"s2\">\"your@gmail.com\"</span>\r\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Type your password and press enter:\"</span><span class=\"p\">)</span>\r\n\r\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">MIMEMultipart</span><span class=\"p\">(</span><span class=\"s2\">\"alternative\"</span><span class=\"p\">)</span>\r\n<span class=\"n\">message</span><span class=\"p\">[</span><span class=\"s2\">\"Subject\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"multipart test\"</span>\r\n<span class=\"n\">message</span><span class=\"p\">[</span><span class=\"s2\">\"From\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sender_email</span>\r\n<span class=\"n\">message</span><span class=\"p\">[</span><span class=\"s2\">\"To\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">receiver_email</span>\r\n\r\n<span class=\"c1\"># Create the plain-text and HTML version of your message</span>\r\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\</span>\r\n<span class=\"s2\">Hi,</span>\r\n<span class=\"s2\">How are you?</span>\r\n<span class=\"s2\">Real Python has many great tutorials:</span>\r\n<span class=\"s2\">www.realpython.com\"\"\"</span>\r\n<span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\</span>\r\n<span class=\"s2\">&lt;html&gt;</span>\r\n<span class=\"s2\">  &lt;body&gt;</span>\r\n<span class=\"s2\">    &lt;p&gt;Hi,&lt;br&gt;</span>\r\n<span class=\"s2\">       How are you?&lt;br&gt;</span>\r\n<span class=\"s2\">       &lt;a href=\"http://www.realpython.com\"&gt;Real Python&lt;/a&gt; </span>\r\n<span class=\"s2\">       has many great tutorials.</span>\r\n<span class=\"s2\">    &lt;/p&gt;</span>\r\n<span class=\"s2\">  &lt;/body&gt;</span>\r\n<span class=\"s2\">&lt;/html&gt;</span>\r\n<span class=\"s2\">\"\"\"</span>\r\n\r\n<span class=\"c1\"># Turn these into plain/html MIMEText objects</span>\r\n<span class=\"n\">part1</span> <span class=\"o\">=</span> <span class=\"n\">MIMEText</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"s2\">\"plain\"</span><span class=\"p\">)</span>\r\n<span class=\"n\">part2</span> <span class=\"o\">=</span> <span class=\"n\">MIMEText</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">,</span> <span class=\"s2\">\"html\"</span><span class=\"p\">)</span>\r\n\r\n<span class=\"c1\"># Add HTML/plain-text parts to MIMEMultipart message</span>\r\n<span class=\"c1\"># The email client will try to render the last part first</span>\r\n<span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">attach</span><span class=\"p\">(</span><span class=\"n\">part1</span><span class=\"p\">)</span>\r\n<span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">attach</span><span class=\"p\">(</span><span class=\"n\">part2</span><span class=\"p\">)</span>\r\n\r\n<span class=\"c1\"># Create secure connection with server and send email</span>\r\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">create_default_context</span><span class=\"p\">()</span>\r\n<span class=\"k\">with</span> <span class=\"n\">smtplib</span><span class=\"o\">.</span><span class=\"n\">SMTP_SSL</span><span class=\"p\">(</span><span class=\"s2\">\"smtp.gmail.com\"</span><span class=\"p\">,</span> <span class=\"mi\">465</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">server</span><span class=\"p\">:</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">sender_email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">sendmail</span><span class=\"p\">(</span>\r\n        <span class=\"n\">sender_email</span><span class=\"p\">,</span> <span class=\"n\">receiver_email</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">as_string</span><span class=\"p\">()</span>\r\n    <span class=\"p\">)</span>\r\n</code></pre><h5>Adding Attachments Using the <code>email</code> Package</h5>\r\n<p>In order to send binary files to an email server that is designed to \r\nwork with textual data, they need to be encoded before transport. This \r\nis most commonly done using <a href=\"https://docs.python.org/3/library/base64.html\"><code>base64</code></a>, which encodes binary data into printable ASCII characters.</p><h4>Sending Multiple Personalized Emails</h4><p>You can put personalized content in a message by using <a href=\"https://realpython.com/python-string-formatting/\"><code>str.format()</code></a> to fill in curly-bracket placeholders.\r\nFor example, <code>\"hi ***REMOVED***name***REMOVED***, you ***REMOVED***result***REMOVED*** your assignment\".format(name=\"John\", result=\"passed\")</code> will give you <code>\"hi John, you passed your assignment\"</code>.</p><p>The following code example lets you send personalized emails to multiple contacts. It loops over a CSV file with <code>name,email,grade</code> for each contact.</p><pre><code><span class=\"kn\">import</span> <span class=\"nn\">csv</span><span class=\"o\">,</span> <span class=\"nn\">smtplib</span><span class=\"o\">,</span> <span class=\"nn\">ssl</span>\r\n\r\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"Subject: Your grade</span>\r\n\r\n<span class=\"s2\">Hi </span><span class=\"si\">***REMOVED***name***REMOVED***</span><span class=\"s2\">, your grade is </span><span class=\"si\">***REMOVED***grade***REMOVED***</span><span class=\"s2\">\"\"\"</span>\r\n<span class=\"n\">from_address</span> <span class=\"o\">=</span> <span class=\"s2\">\"my@gmail.com\"</span>\r\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Type your password and press enter: \"</span><span class=\"p\">)</span>\r\n\r\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">create_default_context</span><span class=\"p\">()</span>\r\n<span class=\"k\">with</span> <span class=\"n\">smtplib</span><span class=\"o\">.</span><span class=\"n\">SMTP_SSL</span><span class=\"p\">(</span><span class=\"s2\">\"smtp.gmail.com\"</span><span class=\"p\">,</span> <span class=\"mi\">465</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">server</span><span class=\"p\">:</span>\r\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">from_address</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\r\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"contacts_file.csv\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\r\n        <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\r\n        <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">reader</span><span class=\"p\">)</span>  <span class=\"c1\"># Skip header row</span>\r\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">grade</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\r\n            <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">sendmail</span><span class=\"p\">(</span>\r\n                <span class=\"n\">from_address</span><span class=\"p\">,</span>\r\n                <span class=\"n\">email</span><span class=\"p\">,</span>\r\n                <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"n\">grade</span><span class=\"o\">=</span><span class=\"n\">grade</span><span class=\"p\">),</span>\r\n            <span class=\"p\">)</span>\r\n</code></pre><h4>Email APIs</h4><p>There are multiple libraries designed to make sending emails easier, such as <a href=\"https://github.com/tomekwojcik/envelopes\">Envelopes</a>, <a href=\"https://github.com/mailgun/flanker\">Flanker,</a> GmailApi and <a href=\"https://pypi.org/project/yagmail/\">Yagmail</a>. </p><h5>Yagmail</h5><p>Yagmail is designed to work specifically with Gmail, and it greatly simplifies the process of sending email.</p><p> </p><h4>Transactional Email Services</h4>\r\nIf you plan to send a large volume of emails, want to see email \r\nstatistics, and want to ensure reliable delivery, it may be worth \r\nlooking into transactional email services.<p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><table class=\"table table-hover\"><thead><tr><th>Provider</th><th>Free plan</th></tr></thead><tbody><tr>\r\n<td><a href=\"https://sendgrid.com/marketing/sendgrid-services-cro/#compare-plans\">Sendgrid</a></td>\r\n<td>40,000 emails for your first 30 days, then 100/day</td>\r\n</tr><tr>\r\n<td><a href=\"https://www.sendinblue.com/pricing/\">Sendinblue</a></td>\r\n<td>300 emails/day</td>\r\n</tr><tr>\r\n<td><a href=\"https://www.mailgun.com/pricing-simple\">Mailgun</a></td>\r\n<td>First 10,000 emails free</td>\r\n</tr><tr>\r\n<td><a href=\"https://www.mailjet.com/pricing/\">Mailjet</a></td>\r\n<td>200 emails/day</td>\r\n</tr><tr><td><a href=\"https://aws.amazon.com/free/?awsf.Free%20Tier%20Types=categories%23alwaysfree\">Amazon SES</a></td><td>62,000 emails/month</td></tr></tbody></table><p><br></p><h5><code></code></h5><h5><code>REFERENCE</code></h5><ol><li>Real Python<code> - </code><a href=\"https://realpython.com/python-send-email/\" target=\"_blank\">https://realpython.com/python-send-email/</a><code><br></code></li></ol>", "tags": "python,email,smtp,imap,pop", "status": "Publish", "views": 2, "date_created": "2021-12-20T05:33:07.780Z", "category": 1, "series": null***REMOVED******REMOVED***, ***REMOVED***"model": "blog.article", "pk": 3, "fields": ***REMOVED***"user": 1, "image": "image/blog/json.png", "title": "JSON: JavaScript Object Notation", "content": "<p>JSON is a <b>text format</b> for storing and transporting data. </p><p>JSON syntax is derived from JavaScript object notation syntax:</p>\r\n<ul><li>Data is in name/value pairs</li><li>Data is separated by commas</li><li>Curly braces hold objects</li><li>Square brackets hold arrays</li></ul><h3>JSON Data.<br></h3>\r\n\r\n<p>JSON data is written as name/value pairs (aka key/value pairs). A name/value pair consists of a field name (in double quotes), \r\nfollowed by a colon, followed by a value:\r\n\r\n</p><h6>Example</h6>\r\n<span class=\"jscolor\" style=\"color:black\">\r\n<span class=\"jsstringcolor\" style=\"color:brown\">\"name\"</span>:<span class=\"jsstringcolor\" style=\"color:brown\">\"John\"</span></span><p>In JSON, keys must be strings, written with double quotes while values must be one of the following data types:\r\n</p><ul><li>a string</li><li>a number</li><li>an object(JSON object)</li><li>an array</li><li>a boolean</li><li>null</li></ul><p><u><em>String values</em></u> must be written with double quotes: ***REMOVED***<span style=\"background-color: inherit;\"><span style=\"color: rgb(206, 0, 0);\">\"name\"</span></span>: <span style=\"background-color: inherit;\"><span style=\"color: rgb(206, 0, 0);\">\"John\"</span></span>***REMOVED***<br></p><p><u>Numbers</u> in JSON must be an integer or a floating point: <span class=\"jscolor\" style=\"color:black\">***REMOVED***<span class=\"jsstringcolor\" style=\"color:brown\">\"<span style=\"background-color: inherit;\"><span style=\"color: rgb(206, 0, 0);\">age</span></span>\"</span>:<span class=\"jsnumbercolor\" style=\"color:red\"> <span style=\"background-color: inherit;\"><span style=\"color: rgb(206, 0, 0);\">30</span></span></span>***REMOVED***</span></p><h6><span class=\"jscolor\" style=\"color:black\">Example:</span></h6><pre><span class=\"jscolor\" style=\"color:black\"><span class=\"jscolor\" style=\"color:black\">***REMOVED***</span></span></pre><pre>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"name\"</span>:<span class=\"jsstringcolor\" style=\"color:brown\">\"John\"</span>, </span></span></pre><pre>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"age\"</span>:<span class=\"jsnumbercolor\" style=\"color:red\">30</span>, </span></span></pre><pre>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"car\"</span>:<span class=\"jskeywordcolor\" style=\"color:mediumblue\">null<br></span>***REMOVED***</span></span></pre><h3>JSON Objects.</h3>Value in JSON can be Objects<br><h6>Example:<span class=\"jscolor\" style=\"color:black\"> </span></h6><pre><span class=\"jscolor\" style=\"color:black\">***REMOVED***<br></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"employee\"</span>:***REMOVED***</span></pre><pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"name\"</span>:<span class=\"jsstringcolor\" style=\"color:brown\">\"John\"</span>, </span></pre><pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"age\"</span>:<span class=\"jsnumbercolor\" style=\"color:red\">30</span>, </span></pre><pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"city\"</span>:<span class=\"jsstringcolor\" style=\"color:brown\">\"New York\"</span></span></pre><pre><span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\"></span></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\">***REMOVED***<span class=\"jsnumbercolor\" style=\"color:red\">\r\n</span>***REMOVED***</span></pre><p><span class=\"jscolor\" style=\"color:black\"></span></p><p><span class=\"jscolor\" style=\"color:black\"><br></span></p><h3>JSON Arrays.</h3><p><br></p><h6>Example:</h6><pre><span class=\"jscolor\" style=\"color:black\">***REMOVED***<br><span class=\"jsstringcolor\" style=\"color:brown\">\"employees\"</span>:[<span class=\"jsstringcolor\" style=\"color:brown\">\"John\"</span>, <span class=\"jsstringcolor\" style=\"color:brown\">\"Anna\"</span>, <span class=\"jsstringcolor\" style=\"color:brown\">\"Peter\"</span>]<br>***REMOVED***</span></pre><p>JSON literals and Objects can contain Arrays.</p><pre><span class=\"jscolor\" style=\"color:black\">***REMOVED***\r\n</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"name\"</span>:<span class=\"jsstringcolor\" style=\"color:brown\">\"John\"</span>,\r\n</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"age\"</span>:<span class=\"jsnumbercolor\" style=\"color:red\">30</span>,\r\n</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\">\"cars\"</span>:[<span class=\"jsstringcolor\" style=\"color:brown\">\"Ford\"</span>, <span class=\"jsstringcolor\" style=\"color:brown\">\"BMW\"</span>, <span class=\"jsstringcolor\" style=\"color:brown\">\"Fiat\"</span>]<span class=\"jsnumbercolor\" style=\"color:red\">\r\n</span>***REMOVED***</span></pre><h3>JSON Boolean</h3>\r\n<p>Values in JSON can be true/false.</p>\r\n<div class=\"w3-example\">\r\n<h6>Example</h6>\r\n<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:red\">\r\n</span>  ***REMOVED***<span class=\"jsstringcolor\" style=\"color:brown\">\"sale\"</span>:<span class=\"jskeywordcolor\" style=\"color:mediumblue\">true</span>***REMOVED*** </span></div><div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><br></span></div>\r\n</div><h3>JSON null\r\n</h3><p>Values in JSON can be null.</p>\r\n<div class=\"w3-example\">\r\n<h6>Example</h6>\r\n<div class=\"w3-code notranslate jsHigh\"><span class=\"jscolor\" style=\"color:black\"><span class=\"jsnumbercolor\" style=\"color:red\">\r\n</span>  ***REMOVED***<span class=\"jsstringcolor\" style=\"color:brown\">\"middlename\"</span>:<span class=\"jskeywordcolor\" style=\"color:mediumblue\">null</span>***REMOVED*** </span></div>\r\n</div><p><span class=\"jscolor\" style=\"color:black\"></span></p><p><br></p><h3>JSON Files</h3>\r\n<ul><li>The file type for JSON files is \".json\"</li><li>The MIME type for JSON text is \"application/json\"</li></ul><p><span class=\"jscolor\" style=\"color:black\"></span></p><p><span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\"><br></span></span></p><p><span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\"><br></span></span></p><h5>References</h5><ol><li>JSON INTRODUCTION -<span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\"> </span></span><a href=\"https://www.w3schools.com/js/js_json_intro.asp\" target=\"_blank\">https://www.w3schools.com/</a><span class=\"jscolor\" style=\"color:black\"><span class=\"jsstringcolor\" style=\"color:brown\"><br></span></span></li></ol>", "tags": "JSON,Javascript,JS", "status": "Publish", "views": 1, "date_created": "2021-12-20T05:38:06.712Z", "category": 3, "series": null***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.profile", "pk": 1, "fields": ***REMOVED***"user": 1, "image": "image/profile/malonza.JPG", "cv_file": "file/profile/cv/Elkanah_Malonza_-_programmer.pdf", "first_name": "Elkanah", "second_name": "Malonza", "email_1": "elkanahmalonza@gmail.com", "email_2": "malonetechnologies101@gmail.com", "phone_number_1": "+254716506983", "phone_number_2": "+254776390094", "description": "Hello, I’m a Elkanah, web-developer based on Nairobi. I have rich experience in web site design & building and customization.", "address": "Nairobi, Kenya"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.project", "pk": 1, "fields": ***REMOVED***"profile": 1, "image": "image/project/project-1.png", "name": "Business Reviews", "description": "The app will host reviews to help consumers shop with confidence, and deliver rich insights to help businesses improve the experiences they offer. The more consumers use our platform and share their own opinions, the richer the insights we offer businesses, and the more opportunities they have to earn the trust of consumers from all around the world.", "url": "https://tranquil-garden-17913.herokuapp.com/", "video_url": null, "date": "2021-10-07", "date_created": "2021-12-15T08:29:23.035Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.project", "pk": 2, "fields": ***REMOVED***"profile": 1, "image": "image/project/project-5.png", "name": "Elkanah's Portfolio", "description": "My Portfolio for showing my Profile, Work, skills, Education, blog, Project have done, Service I offer. Will offer a way to communicate with a customer, etc.", "url": "https://elkanah-malonza.herokuapp.com/", "video_url": null, "date": "2021-12-25", "date_created": "2021-12-15T09:46:51.440Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.project", "pk": 4, "fields": ***REMOVED***"profile": 1, "image": "image/project/Screenshot_from_2021-12-21_15-06-04_62hcTq7.png", "name": "To-Do List", "description": "A Web app that will help make list of tasks that need to be completed. A user will be able to make multiple list which would be organized in order of priority. Manage your to-do's from home, the office, the car, the grocery store - Anywhere.", "url": "https://tranquil-garden-17913.herokuapp.com/", "video_url": null, "date": "2021-12-21", "date_created": "2021-12-21T12:22:59.816Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 1, "fields": ***REMOVED***"project": 1, "technology": "Python", "date_created": "2021-12-15T09:25:42.143Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 2, "fields": ***REMOVED***"project": 1, "technology": "Django", "date_created": "2021-12-15T09:25:42.436Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 3, "fields": ***REMOVED***"project": 1, "technology": "HTML", "date_created": "2021-12-15T09:25:42.570Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 4, "fields": ***REMOVED***"project": 1, "technology": "Bootstrap", "date_created": "2021-12-15T09:25:42.736Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 5, "fields": ***REMOVED***"project": 1, "technology": "CSS", "date_created": "2021-12-15T09:25:42.859Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 6, "fields": ***REMOVED***"project": 1, "technology": "Javascript", "date_created": "2021-12-15T09:25:43.026Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 7, "fields": ***REMOVED***"project": 1, "technology": "JQuery", "date_created": "2021-12-15T09:25:43.127Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 8, "fields": ***REMOVED***"project": 1, "technology": "SQLite", "date_created": "2021-12-15T09:25:43.235Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 9, "fields": ***REMOVED***"project": 1, "technology": "DjangoORM", "date_created": "2021-12-15T09:25:43.413Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 10, "fields": ***REMOVED***"project": 1, "technology": "Google-Api", "date_created": "2021-12-15T09:25:43.511Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 11, "fields": ***REMOVED***"project": 2, "technology": "Python", "date_created": "2021-12-15T09:46:51.879Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 12, "fields": ***REMOVED***"project": 2, "technology": "Django", "date_created": "2021-12-15T09:46:52.401Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 13, "fields": ***REMOVED***"project": 2, "technology": "Javascript", "date_created": "2021-12-15T09:46:52.578Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 14, "fields": ***REMOVED***"project": 2, "technology": "JQuery", "date_created": "2021-12-15T09:46:53.088Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 15, "fields": ***REMOVED***"project": 2, "technology": "HTML", "date_created": "2021-12-15T09:46:53.211Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 16, "fields": ***REMOVED***"project": 2, "technology": "CSS", "date_created": "2021-12-15T09:46:53.299Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 17, "fields": ***REMOVED***"project": 2, "technology": "Bootstrap", "date_created": "2021-12-15T09:46:53.399Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 18, "fields": ***REMOVED***"project": 2, "technology": "SQLite", "date_created": "2021-12-15T09:46:53.510Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 109, "fields": ***REMOVED***"project": 4, "technology": "                                                                                                                                                                                                                                                                                                                                  Django", "date_created": "2021-12-22T07:13:46.168Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 110, "fields": ***REMOVED***"project": 4, "technologyython", "date_created": "2021-12-22T07:13:46.258Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 111, "fields": ***REMOVED***"project": 4, "technologydate_created": "2021-12-22T07:13:46.359Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 112, "fields": ***REMOVED***"project": 4, "technologydate_created": "2021-12-22T07:13:46.592Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectkeyword", "pk": 113, "fields": ***REMOVED***"project": 4, "technologyavascript", "date_created": "2021-12-22T07:13:46.693Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectimage", "pk": 5, "fields": ***REMOVED***"project": 4, "picture": "image/project/multiple/Screenshot_from_2021-12-21_15-06-04_rG3xtGs.png", "date_created": "2021-12-21T13:55:53.409Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectimage", "pk": 7, "fields": ***REMOVED***"project": 4, "picture": "image/project/multiple/Screenshot_from_2021-12-21_15-08-38_YcE2byo.png", "date_created": "2021-12-22T07:13:46.795Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.projectimage", "pk": 8, "fields": ***REMOVED***"project": 4, "picture": "image/project/multiple/Screenshot_from_2021-12-21_15-05-39_2UNF9LI.png", "date_created": "2021-12-22T07:13:46.906Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.sociallink", "pk": 1, "fields": ***REMOVED***"profile": 1, "name": "Github", "logo": "fab fa-github", "url": "https://github.com/MalonzaElkanah/", "date_created": "2021-12-14T12:58:14.105Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.sociallink", "pk": 2, "fields": ***REMOVED***"profile": 1, "name": "Facebook", "logo": "fab fa-facebook-f", "url": "https://github.com/MalonzaElkanah/", "date_created": "2021-12-14T12:58:14.795Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.sociallink", "pk": 3, "fields": ***REMOVED***"profile": 1, "name": "Twitter", "logo": "fab fa-twitter", "url": "https://github.com/MalonzaElkanah/", "date_created": "2021-12-14T12:58:15.373Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.sociallink", "pk": 4, "fields": ***REMOVED***"profile": 1, "name": "Instagram", "logo": "fab fa-instagram", "url": "https://github.com/MalonzaElkanah/", "date_created": "2021-12-14T12:58:15.817Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.education", "pk": 1, "fields": ***REMOVED***"profile": 1, "institution": "Multimedia University of Kenya", "location": "Nairobi, Kenya", "study_area": "Bachelor of Science", "study_type": "Computer Technology", "start_date": "2015-09-02", "end_date": "2019-10-18", "gpa": "second class, upper division", "description": "Core subjects Included: Systems Analysis & Design, Network Design, Database Design, Object Oriented Design, Network Security, Firewall Design, Logistics, General Management and Accounting. Participated in leadership and team Activities including being a member Computer & Information Technology Club.", "date_created": "2021-12-15T15:29:08.516Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.education", "pk": 2, "fields": ***REMOVED***"profile": 1, "institution": "Chogoria Boys High School", "location": "Chogoria, Kenya", "study_area": "Highschool", "study_type": "Kenya Certificate of Secondary Education", "start_date": "2011-02-02", "end_date": "2014-11-27", "gpa": "B+", "description": "Mathematics: B+, English: B-, Kiswahili: B, Chemistry: B, Physics: A, Geography: B+, History: A- and Power Mechanics:·B+", "date_created": "2021-12-22T14:17:39.863Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.work", "pk": 1, "fields": ***REMOVED***"profile": 1, "company": "Office of the Director of Public Prosecution", "location": "Nairobi, Kenya", "position": "ICT Intern", "website": "https://www.odpp.go.ke/", "start_date": "2021-06-29", "end_date": "2021-12-31", "date_created": "2021-12-15T11:59:48.443Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.work", "pk": 2, "fields": ***REMOVED***"profile": 1, "company": "Kitui County Referral Hosipital", "location": "Kitui, Kenya", "position": "IT INTERNSHIP", "website": "https://kitui-county-hospital.business.site/", "start_date": "2019-05-07", "end_date": "2019-08-24", "date_created": "2021-12-15T12:46:07.220Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.work", "pk": 3, "fields": ***REMOVED***"profile": 1, "company": "Huduma Centre", "location": "Kajiado, Kenya", "position": "IT Support Attachment", "website": "https://www.hudumakenya.go.ke/", "start_date": "2017-05-04", "end_date": "2017-08-30", "date_created": "2021-12-15T12:50:48.543Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 1, "fields": ***REMOVED***"work": 1, "name": "Offered technical support in implementation and maintenance of Uadilifu Case Management system which processed all prosecution matters in Kenya.", "date_created": "2021-12-15T12:37:19.467Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 2, "fields": ***REMOVED***"work": 1, "name": "Trained users including prosecutors and e-filing clerks on how to use the Uadilifu Case Management system.", "date_created": "2021-12-15T12:37:19.618Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 3, "fields": ***REMOVED***"work": 1, "name": "Carried out data backup, reporting, and recovery which protected the organization against data loss.", "date_created": "2021-12-15T12:37:19.718Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 4, "fields": ***REMOVED***"work": 1, "name": "Installed and configured workstations for IP/IPX based Network", "date_created": "2021-12-15T12:37:19.840Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 5, "fields": ***REMOVED***"work": 1, "name": "Troubleshot hardware-related problems of UPS, SMPS, Printer, and System Units.", "date_created": "2021-12-15T12:37:19.943Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 6, "fields": ***REMOVED***"work": 1, "name": "Managed and Maintained the Servers, PCs, Routers, and Switches.", "date_created": "2021-12-15T12:37:20.041Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 7, "fields": ***REMOVED***"work": 2, "name": "Maintained and troubleshot the Local Area Network to ensure that the Hospital Information Management system (HIMS) is up and running with minimal or no down times.", "date_created": "2021-12-15T12:46:07.361Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 8, "fields": ***REMOVED***"work": 2, "name": "Installed softwares and performed upgrades to all computers and ICT gadgets.", "date_created": "2021-12-15T12:46:07.672Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 9, "fields": ***REMOVED***"work": 2, "name": "Repaired and maintained all ICT hardware and associated peripherals.", "date_created": "2021-12-15T12:46:07.793Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 10, "fields": ***REMOVED***"work": 2, "name": "Performed server, networks and database administration.", "date_created": "2021-12-15T12:46:07.938Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 11, "fields": ***REMOVED***"work": 2, "name": "Ensured optimum security of the hospital by tracking, maintenance of CCTV cameras in the facility and retrieval of footage when needed by the Management.", "date_created": "2021-12-15T12:46:08.138Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 12, "fields": ***REMOVED***"work": 2, "name": "Assisted in retrieval of reports from the HIMS for decision making by the Hospital management.", "date_created": "2021-12-15T12:46:08.260Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 13, "fields": ***REMOVED***"work": 3, "name": "Configured and Maintained the VMWARE Virtualization Software that ensured the staff of Kajiado Huduma Center can login and per- form their daily duties efficiently.", "date_created": "2021-12-15T12:50:49.157Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 14, "fields": ***REMOVED***"work": 3, "name": "Configured and Maintained the Queue Management System that ensured reduction in clients waiting time and improved Huduma services efficiency.", "date_created": "2021-12-15T12:50:49.921Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 15, "fields": ***REMOVED***"work": 3, "name": "Provided Technical and IT support services like troubleshooting printers and resolving network issues.", "date_created": "2021-12-15T12:50:50.565Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.workhighlight", "pk": 16, "fields": ***REMOVED***"work": 3, "name": "Maintained computers used by the employees to offer various services in the center.", "date_created": "2021-12-15T12:50:50.744Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skill", "pk": 1, "fields": ***REMOVED***"profile": 1, "name": "Backend", "description": ",HTML,Bootstrap,CSS,Javascript,JQuery,SQLite,DjangoORM,Google-Api", "date_created": "2021-12-15T16:15:08.506Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skill", "pk": 2, "fields": ***REMOVED***"profile": 1, "name": "Frontend", "description": "SQLite", "date_created": "2021-12-17T10:18:17.883Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 16, "fields": ***REMOVED***"skill": 2, "name": "HTML", "date_created": "2021-12-17T10:18:18.021Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 17, "fields": ***REMOVED***"skill": 2, "name": " CSS", "date_created": "2021-12-17T10:18:18.198Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 18, "fields": ***REMOVED***"skill": 2, "name": " Javascript", "date_created": "2021-12-17T10:18:18.298Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 19, "fields": ***REMOVED***"skill": 2, "name": " JQuery", "date_created": "2021-12-17T10:18:18.420Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 20, "fields": ***REMOVED***"skill": 2, "name": " Bootstrap", "date_created": "2021-12-17T10:18:18.523Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 21, "fields": ***REMOVED***"skill": 2, "name": " XML", "date_created": "2021-12-17T10:18:18.608Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 22, "fields": ***REMOVED***"skill": 2, "name": " CSV", "date_created": "2021-12-17T10:18:18.720Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 23, "fields": ***REMOVED***"skill": 2, "name": " JSON", "date_created": "2021-12-17T10:18:18.842Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 24, "fields": ***REMOVED***"skill": 1, "name": "    Python", "date_created": "2021-12-17T10:18:36.750Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 25, "fields": ***REMOVED***"skill": 1, "name": "     Django", "date_created": "2021-12-17T10:18:36.850Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 26, "fields": ***REMOVED***"skill": 1, "name": "     Flask", "date_created": "2021-12-17T10:18:36.950Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 27, "fields": ***REMOVED***"skill": 1, "name": "      php", "date_created": "2021-12-17T10:18:37.050Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.skillkeyword", "pk": 28, "fields": ***REMOVED***"skill": 1, "name": " SQLite", "date_created": "2021-12-17T10:18:37.172Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.technicalskillhighlight", "pk": 1, "fields": ***REMOVED***"skill_keyword": 24, "percentage": 90, "date_created": "2021-12-22T12:19:40.542Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.technicalskillhighlight", "pk": 2, "fields": ***REMOVED***"skill_keyword": 18, "percentage": 75, "date_created": "2021-12-22T12:20:41.194Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.technicalskillhighlight", "pk": 3, "fields": ***REMOVED***"skill_keyword": 27, "percentage": 50, "date_created": "2021-12-22T12:21:47.413Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.technicalskillhighlight", "pk": 4, "fields": ***REMOVED***"skill_keyword": 17, "percentage": 75, "date_created": "2021-12-22T12:22:17.455Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.professionalskillhighlight", "pk": 1, "fields": ***REMOVED***"profile": 1, "name": "Communication", "percentage": 85, "date_created": "2021-12-22T13:21:10.034Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.professionalskillhighlight", "pk": 2, "fields": ***REMOVED***"profile": 1, "name": "Team Work", "percentage": 75, "date_created": "2021-12-22T13:24:57.704Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.professionalskillhighlight", "pk": 3, "fields": ***REMOVED***"profile": 1, "name": "Project Mngmt", "percentage": 80, "date_created": "2021-12-22T13:25:39.769Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.professionalskillhighlight", "pk": 4, "fields": ***REMOVED***"profile": 1, "name": "Creativity", "percentage": 90, "date_created": "2021-12-22T13:26:40.062Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.service", "pk": 1, "fields": ***REMOVED***"profile": 1, "logo": "fas fa-drafting-compass", "name": "UI Design", "description": "I create visual and interactive experience for web pages. I use wireframing tool(Sketch) to design skeletal outline of a webpage before developing it.", "date_created": "2021-12-16T07:56:25.615Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.service", "pk": 2, "fields": ***REMOVED***"profile": 1, "logo": "fas fa-laptop-code", "name": "Web Development", "description": "I build, create, and maintain web apps. I am an expert in Django, Flask python web framework to develop the backend and JS, HTML, CSS for the Frontend.", "date_created": "2021-12-16T08:04:45.652Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.service", "pk": 3, "fields": ***REMOVED***"profile": 1, "logo": "fas fa-object-group", "name": "Computer Scripting", "description": "I create programs to make work easier and desirable by write computer scripts to automates the execution of varies tasks, tweak applications and OS. ", "date_created": "2021-12-16T08:06:19.536Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricing", "pk": 1, "fields": ***REMOVED***"profile": 1, "price": 50000.0, "name": "Full Time Work", "description": "I am available for full time", "date_created": "2021-12-16T10:37:37.820Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricing", "pk": 2, "fields": ***REMOVED***"profile": 1, "price": 17000.0, "name": "Fixed Price Project", "description": "I am available for Fixed Roles", "date_created": "2021-12-16T10:39:15.448Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricing", "pk": 3, "fields": ***REMOVED***"profile": 1, "price": 100.0, "name": "Hourley work", "description": "I am available for Hourley projets", "date_created": "2021-12-16T10:40:33.612Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 1, "fields": ***REMOVED***"pricing": 1, "name": "Web Development", "status": "active", "date_created": "2021-12-16T11:13:03.443Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 2, "fields": ***REMOVED***"pricing": 1, "name": "Advetising", "status": "active", "date_created": "2021-12-16T11:13:03.560Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 3, "fields": ***REMOVED***"pricing": 1, "name": "Game Development", "status": "active", "date_created": "2021-12-16T11:13:03.704Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 4, "fields": ***REMOVED***"pricing": 1, "name": "Music Writing", "status": "active", "date_created": "2021-12-16T11:13:03.887Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 5, "fields": ***REMOVED***"pricing": 2, "name": "Web Development", "status": "active", "date_created": "2021-12-16T11:15:49.957Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 6, "fields": ***REMOVED***"pricing": 2, "name": "Advetising", "status": "active", "date_created": "2021-12-16T11:15:50.053Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 7, "fields": ***REMOVED***"pricing": 2, "name": "Game Development", "status": "active", "date_created": "2021-12-16T11:15:50.163Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 8, "fields": ***REMOVED***"pricing": 2, "name": "Music Writing", "status": "not_active", "date_created": "2021-12-16T11:15:50.252Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 9, "fields": ***REMOVED***"pricing": 3, "name": "Web Development", "status": "active", "date_created": "2021-12-16T11:16:46.778Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 10, "fields": ***REMOVED***"pricing": 3, "name": "Advetising", "status": "active", "date_created": "2021-12-16T11:16:46.886Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 11, "fields": ***REMOVED***"pricing": 3, "name": "Game Development", "status": "active", "date_created": "2021-12-16T11:16:46.996Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.pricingkeyword", "pk": 12, "fields": ***REMOVED***"pricing": 3, "name": "Music Writing", "status": "active", "date_created": "2021-12-16T11:16:47.108Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.message", "pk": 1, "fields": ***REMOVED***"first_name": "Elkanah", "last_name": "Malonza", "email": "fake@email.com", "message": "test 002", "status": "unsend", "date_created": "2021-12-23T09:20:18.217Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.message", "pk": 2, "fields": ***REMOVED***"first_name": "Elkanah", "last_name": "Malonza", "email": "elkanahmalonza@gmail.com", "message": "test004", "status": "unsend", "date_created": "2021-12-23T09:22:31.881Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.message", "pk": 3, "fields": ***REMOVED***"first_name": "Elkanah", "last_name": "Malonza", "email": "fake@email.com", "message": "test 005", "status": "unsend", "date_created": "2021-12-23T09:31:13.115Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.message", "pk": 4, "fields": ***REMOVED***"first_name": "Elkanah", "last_name": "Malonza", "email": "elkanahmalonza@gmail.com", "message": "This is a Test", "status": "unsend", "date_created": "2021-12-23T09:39:22.835Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.message", "pk": 5, "fields": ***REMOVED***"first_name": "Malonza", "last_name": " ", "email": "elkanahmalonza@yahoo.com", "message": "Full Time Work", "status": "unsend", "date_created": "2021-12-23T12:13:32.838Z"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.emailapp", "pk": 1, "fields": ***REMOVED***"profile": 1, "smtp_server": "smtp.gmail.com", "port": 587, "email": "malonetechnologies101@gmail.com", "password": "Talia2019"***REMOVED******REMOVED***, ***REMOVED***"model": "profile_settings.appsettings", "pk": 1, "fields": ***REMOVED***"user": 1, "app_name": "Malone", "logo": "Image/Settings/Logo/logo.png", "favicon": "Image/Settings/Logo/favicon.ico", "layout": "1", "sidebar_color": "1", "color_theme": "white", "mini_sidebar": "off", "sticky_header": "on"***REMOVED******REMOVED***]